name: Release New Player Version

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version number to be released (must follow semantic versioning)'
        required: true
      betajs_tag:
        description: 'Tag of the BetaJS release to fetch notes from'
        required: false

jobs:
  release:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./anne_lima_app

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'

      - name: Validate version
        id: validate_version
        env:
          VERSION: ${{ github.event.inputs.version }}
        run: |
          if ! [[ "$VERSION" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "Error: Version number must follow semantic versioning (MAJOR.MINOR.PATCH)"
            exit 1
          fi
          if [ $(git tag -l "v$VERSION") ]; then
            echo "Error: Tag v$VERSION already exists"
            exit 1
          fi
          echo "version=$VERSION" >> $GITHUB_ENV
          
      - name: Update package.json
        run: |
          VERSION=${{ env.version }}
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          npm version $VERSION --no-git-tag-version
          if [ -n "$BETAJSTAG" ]; then
            npm install betajs-media-components@$BETAJSTAG
          fi
          npm install
          git commit -am "Bump version to $VERSION"
          git push origin HEAD

      - name: Create Tag
        run: |
          VERSION=${{ env.version }}
          git fetch --tags
          git tag v$VERSION
          git push origin tag v$VERSION

      - name: Generate Release Notes
        id: notes
        env: 
           OWNER: ${{ github.repository_owner }}
           REPO: ${{ github.event.repository.name }}
        run: |
          VERSION=${{ env.version }}
          {
            echo 'RELEASE_NOTES<<EOF'
            curl -L \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/$OWNER/$REPO/releases/generate-notes \
            -d "{\"tag_name\":\"v$VERSION\"}" \
            | jq -r '.body'
            echo EOF
          } >> "$GITHUB_ENV"

      - name: Fetch BetaJS Release Notes
        if: ${{ github.event.inputs.betajs_tag }}
        id: fetch_betajs_notes
        run: |
          BETAJSTAG=${{ github.event.inputs.betajs_tag }}
          {
            echo 'NOTES<<EOF'
            curl -L \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/betajs/betajs-media-components/releases/generate-notes \
             -d "{\"tag_name\":\"v$BETAJSTAG\"}" \
            | jq -r '.body'
            echo EOF
          } >> "$GITHUB_ENV"

      - name: Build Release Body
        id: build_release_body
        run: |
          NOTES="${{ env.RELEASE_NOTES }}"
          if [ -n "${{ github.event.inputs.betajs_tag }}" ]; then
            {
             echo 'release_body<<EOF'
             echo "$NOTES"
             echo -e "\n\n## BetaJS Changes\n${{ env.NOTES }}"
             echo EOF
            } >> "$GITHUB_ENV"
          else
            echo "release_body=$NOTES" >> $GITHUB_ENV
          fi

      - name: Create GitHub Release
        id: create_release_note
        env: 
           OWNER: ${{ github.repository_owner }}
           REPO: ${{ github.event.repository.name }}
        run: |
          VERSION=${{ env.version }}
          curl -L \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/$OWNER/$REPO/releases \
            -d "$(jq -n --arg tag_name "v$VERSION" --arg name "v$VERSION" --arg body "${{env.release_body}}" '{tag_name: $tag_name, name: $name, body: $body}')"
